
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

/* ----------------------- for using PBDS(policy base data structure) -------------------*/
       //using namespace __gnu_pbds;
       //#include<ext/pb_ds/assoc_container.hpp>
       //#include<ext/pb_ds/tree_policy.hpp>
       //typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key (0 based indexing)
/*----------------------------------------------------------------------------------------*/
vector<vector<int>> ans;
void solve(vector<int> &a,int idx){
    if(idx==a.size()){
        ans.push_back(a);
        return ;
    }
    for(int i = idx ;i<a.size();i++){
        swap(a[i],a[idx]);
        solve(a,idx+1);
        swap(a[i],a[idx]);
    }
     return ;
    }

int32_t main(){
    int n;
    cin>>n;
    vector<int> a(n);
    for(auto &i : a)
        cin>>i;
     cout<<"\n"<<"\n";
        solve(a,0);
        for(auto v:ans){
            for(auto i:v){
                cout<<i<<" ";
            }
            cout<<"\n";
        }
        return 0;
    }
